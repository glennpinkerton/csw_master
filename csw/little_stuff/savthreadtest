
#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>

void *print_message_function (void *ptr);

void cleanupThreads (void);

static pthread_t thread1, thread2;

int main ()
{

    char *message1 = "Thread 1";
    char *message2 = "Thread 2";

    int  iret1, iret2;

    iret1 = pthread_create (&thread1, NULL, print_message_function, (void *)message1);
    iret2 = pthread_create (&thread2, NULL, print_message_function, (void *)message2);

    atexit (cleanupThreads);

    exit (0);

    return 0;
}

void *print_message_function (void *ptr)
{
    char   *message;

    message = (char *)ptr;
    printf ("%s \n", message);

    return NULL;
}


void cleanupThreads (void)
{
    printf ("entered cleanupThreads\n");
    pthread_join (thread1, NULL);
    printf ("Thread 1 finished at exit\n");
    pthread_join (thread2, NULL);
    printf ("Thread 2 finished at exit\n");
    printf ("leaving cleanupThreads\n");
}

