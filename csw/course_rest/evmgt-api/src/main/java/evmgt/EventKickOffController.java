package evmgt;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.rest.webmvc.RepositoryRestController;
import org.springframework.data.rest.webmvc.ResourceNotFoundException;

//import org.springframework.stereotype.Controller;

//import org.springframework.http.HttpHeaders;
import org.springframework.http.ResponseEntity;

import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.PostMapping;
//import org.springframework.web.bind.annotation.GetMapping;
//import org.springframework.web.bind.annotation.RequestParam;
//import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.PathVariable;

import evmgt.Event;
import evmgt.EventRepository;


@RepositoryRestController 
@RequestMapping(path="/events") // This means URL's start with /events
                                // (after Application path)
public class EventKickOffController {

    @Autowired // This means to get the bean called userRepository
               // Which is auto-generated by Spring, we will use it to handle the data
    private EventRepository eventRepository;
    

// The tutorial is not correct in how it uses ResponseEntity.  The respnse entity
// is a generic class and needs a type in the <>.  Also, the ResponseEntity
// contains a status code, a body and headers.  The string from the tutorial
// is properly in the body of the response entity.


    @PostMapping("/start/{id}")
    public ResponseEntity<String> start (@PathVariable Long id)
    {
        Optional<Event>  opev = eventRepository.findById(id);

        Event  ev = null;
        if (opev.isPresent()) {
          ev = opev.get();
        }

        if (ev == null) {
            throw (new ResourceNotFoundException());
        }

        ev.setStarted (true);
        eventRepository.save (ev);

  //      HttpHeaders headers = new HttpHeaders();
  //      headers.add("Responded", "EventKickOffController");

        //String  str = ev.getName() + " started with KickOffController";
        String  str = ev.toString() + " started with KickOffController";

  // Create a ResponseEntity<String> and return it.

        return ResponseEntity.ok(str);
        
    }

}
